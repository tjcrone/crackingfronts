#!/bin/bash
# declare a name for this job
#PBS -N sixsteady
# request the queue (enter the possible names, if omitted, serial is the default)
#PBS -q normal
# request 1 full node with 16 processors
#PBS -l nodes=1:ppn=16:native
# request wall time
#PBS -l walltime=03:00:00
# mail is sent to you when the job starts and when it terminates or aborts
#PBS -m bea
# specify your email address
#PBS -M tjcrone@gmail.com

# This is the script to run a crackingfront run on the Gordon compute cluster.
#
# Timothy Crone (tjcrone@gmail.com)

# define input files
INPUTFILE1='k215e16_stead01_in'
INPUTFILE2='k464e16_stead01_in'
INPUTFILE3='k100e15_stead01_in'
INPUTFILE4='k215e15_stead01_in'
INPUTFILE5='k464e15_stead01_in'
INPUTFILE6='k100e14_stead01_in'

# define directory locations
INPUTDIRECTORY=$HOME'/research/crackingfronts/in_out/'
SRCDIRECTORY=$HOME'/research/crackingfronts/src/'

# do the following only on gordon
THISHOST=`hostname`
if [[ "$THISHOST" == gordon* || "$THISHOST" == gcn* ]]; then

  # switch script to src directory
  cd $SRCDIRECTORY

  # load matlab module
  module load matlab
fi

# run program
./run -p $INPUTDIRECTORY$INPUTFILE1 $INPUTDIRECTORY$INPUTFILE2 $INPUTDIRECTORY$INPUTFILE3 $INPUTDIRECTORY$INPUTFILE4 $INPUTDIRECTORY$INPUTFILE5 $INPUTDIRECTORY$INPUTFILE6

# wait for all running jobs to finish
for job in `jobs -p`; do
  wait $job
done
exit 0
